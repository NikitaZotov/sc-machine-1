name: Coverage

on:
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  run_coverage:
    name: Coverage
    runs-on: ${{ matrix.config.os }}

    strategy:
      fail-fast: false
      matrix:
        config:
          - {
            name: "Coverage C++",
            os: ubuntu-24.04,
            build_type: "Debug",
            cc: "gcc",
            cxx: "g++",
          }

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install dependencies
        id: install_deps
        run: scripts/install_deps_ubuntu.sh --dev

      - name: Restore build caches
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: ${{ github.job }}-${{ matrix.config.os }}-${{ matrix.config.cxx }}-${{ matrix.config.build_type }}

      - name: Build
        id: run_cmake
        env:
          CC: ${{ matrix.config.cc }}
          CXX: ${{ matrix.config.cxx }}
          BUILD_TYPE: ${{ matrix.config.build_type }}
          COVERAGE: ON
          SANITIZER_TYPE: none
        run: cmake --preset debug -DSC_COVERAGE=ON && cmake --build --preset debug

      - name: Prepare coverage
        id: prepare_coverage
        run: scripts/ci/prepare_coverage.sh

      - name: Run tests
        id: run_tests
        run: cd build/Debug && ctest -C Debug -V

      - name: Export coverage report
        id: export_coverage
        run: scripts/ci/export_coverage.sh

      - name: Upload coverage report to CodeCov
        uses: codecov/codecov-action@v4
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          directory: ${{github.workspace}}/build/Debug
          files: coverage.info
          flags: unittests
          fail_ci_if_error: true
          name: codecov-umbrella
          verbose: true
